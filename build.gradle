plugins {
    id 'java'
}

repositories {
    jcenter()

    maven {
        url "https://artifactory.exclamationlabs.com/artifactory/libs-release-local"
    }

    maven {
        url "http://nexus.evolveum.com/nexus/content/repositories/releases/"
    }
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

def versionNumber = "${project_version}"

configurations {
    jaxws
}

dependencies {

    // Required for MidPoint runtime
    runtimeOnly 'org.codehaus.groovy:groovy:2.5.2'
    runtimeOnly 'com.evolveum.polygon:connector-common:1.5.0.0'

    // HTTP/RESTful support
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.apache.httpcomponents:httpclient:4.5.10'

    // H2 database support - for this example project
    implementation "com.h2database:h2:1.4.200"

    implementation "com.exclamationlabs.connid:connector-base:${base_connector_version}-+"

    testImplementation "com.exclamationlabs.connid:connector-base-test-support:${base_connector_version}-+"
    testImplementation 'net.tirasa.connid:connector-framework-internal:1.5.0.0'

    // SOAP generation and execution support
    jaxws 'com.sun.xml.ws:jaxws-tools:2.1.4'
}

task copyDependencyJars(type: Copy) {
    from configurations.runtimeClasspath.collect {
        if(it.isFile() && it.getCanonicalFile().getCanonicalPath().endsWith('.jar') &&
                (!it.getCanonicalFile().getCanonicalPath().contains("connector-framework"))) {
            it
        }
    }
    into file("custom/lib")
}

task baseClean(type: Delete) {
    delete 'custom'
}


/// JAX-WS SOAP Generation Task
class ManualWsImportTask extends DefaultTask {

    @Input
    String bindingsFileLocation

    @Input
    String destinationPackage

    @Input
    String wsdlLocation

    @TaskAction
    def build() {
        project.sourceSets.main.output.classesDirs.inits()
        ant.taskdef(name: 'wsimport',
                classname: 'com.sun.tools.ws.ant.WsImport',
                classpath: project.configurations.jaxws.asPath
        )
        ant.wsimport(keep: true,
                xnocompile: true,
                sourcedestdir: 'src/main/java',
                binding: bindingsFileLocation,
                package: destinationPackage,
                wsdl: wsdlLocation
        )
    }

}

// Generate JAX-WS code generation for public sample SOAP service
task manualBLZTest(type: ManualWsImportTask) {
    wsdlLocation = 'src/test/resources/webservices/BLZService.wsdl'
    destinationPackage = 'com.exclamationlabs.connid.base.soapexample.generated'
    bindingsFileLocation = 'src/test/resources/webservices/BLZService.bindings.xml'
}

jar {
    archiveName("${project.name}-${versionNumber}-connector.jar")
    from 'custom', 'build/classes/java/main', 'src/main/resources'

    manifest {
        attributes("ConnectorBundle-FrameworkVersion": "1.4.3.11",
                "ConnectorBundle-Version": versionNumber,
                "ConnectorBundle-Name": project.name)
    }
}

clean.dependsOn('baseClean')
jar.dependsOn('copyDependencyJars')